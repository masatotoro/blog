<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ぺりかんブログ - pelican</title><link href="masatotoro.github.io/" rel="alternate"></link><link href="masatotoro.github.io/feeds/pelican.atom.xml" rel="self"></link><id>masatotoro.github.io/</id><updated>2019-02-11T00:00:00+09:00</updated><entry><title>ペリカンさんに最速でブログを運んでもらう方法</title><link href="masatotoro.github.io/start-pelican.html" rel="alternate"></link><published>2019-02-11T00:00:00+09:00</published><updated>2019-02-11T00:00:00+09:00</updated><author><name>masatotoro</name></author><id>tag:None,2019-02-11:masatotoro.github.io/start-pelican.html</id><summary type="html">Python製の静的サイトジェネレーターであるPelicanを利用してブログを書く方法を紹介</summary><content type="html">&lt;p&gt;
　多くの静的サイトジェネレーターが&lt;a href="https://www.staticgen.com/"&gt;StaticGen&lt;/a&gt;に掲載されている。
「&lt;a href="https://orgmode.org/worg/org-blog-wiki.html"&gt;EmacsのOrg-modeでブログを書けるツール&lt;/a&gt;はどれか」
という観点で調査したところ、
巡り巡って&lt;a href="https://www.staticgen.com/pelican"&gt;Pelican&lt;/a&gt;（ペリカン）で本ブログを構築することにした。
Python製の静的サイトジェネレーターである&lt;a href="https://www.staticgen.com/pelican"&gt;ペリカン&lt;/a&gt;を利用し、
&lt;a href="https://masatotoro.github.io/blog/"&gt;本ブログ&lt;/a&gt;を作成した手順を記録する。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;PIPでペリカンを導入する&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
　はじめに、ペリカンでブログを作成＆公開するために
必要なライブラリを &lt;code&gt;pip&lt;/code&gt; を利用してインストールする。
(以下の作業は、Ubuntu 18.10で実施)
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;ペリカンのインストール&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;p&gt;
　以下のコマンドを利用し、
&lt;code&gt;pelican&lt;/code&gt;
・
&lt;code&gt;markdown&lt;/code&gt;
・
&lt;code&gt;ghp-import&lt;/code&gt;
をダウンロードする。
&lt;/p&gt;




&lt;div class="org-src-container"&gt;

&lt;pre class="src src-sh"&gt;sudo -H pip3 install pelican markdown ghp-import
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-1-1" class="outline-4"&gt;
&lt;h4 id="sec-1-1-1"&gt;インストールできていることを確認&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-1-1"&gt;
&lt;p&gt;
　インストールできた &lt;code&gt;pelican&lt;/code&gt; を確認する。
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pip3 show pelican
Name: pelican
Version: 4.0.1
Summary: Static site generator supporting reStructuredText and Markdown source content.
Home-page: https://getpelican.com/
Author: Alexis Metaireau
Author-email: authors@getpelican.com
License: AGPLv3
Location: /usr/local/lib/python3.6/dist-packages
Requires: pygments, six, blinker, docutils, feedgenerator, pytz, unidecode, jinja2, python-dateutil
Required-by:
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;ペリカンのプラグインとテーマを取得&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;p&gt;
　GitHubからペリカン用のテーマとプラグインを導入する。
&lt;code&gt;/opt/pelican&lt;/code&gt; 以下にダウンロードするようにしている。
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre class="src src-sh"&gt;git clone https://github.com/getpelican/pelican-themes.git
git clone https://github.com/getpelican/pelican-plugins.git
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-3" class="outline-3"&gt;
&lt;h3 id="sec-1-3"&gt;ペリカンのテーマを設定&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-1-4" class="outline-3"&gt;
&lt;h3 id="sec-1-4"&gt;ペリカンの公式ドキュメント&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-4"&gt;
&lt;p&gt;
　不明点に関しては、
&lt;a href="https://docs.getpelican.com/en/4.0.1/"&gt;ペリカンの公式ドキュメント&lt;/a&gt;
を読んで解決する。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Org-modeで記事を書く&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
　記事は、EmacsのOrg-modeを利用して書く。
そのために、以下のプラグインを利用する。
&lt;/p&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;プラグイン設定&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
本文２
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;リアルタイムプレビュー&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;p&gt;
　ブログを書いているときは、
GoemonとPandocを使ってリアルタイムプレビューを行う。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;GitHub Pagesでブログを公開する&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
　&lt;a href="http://docs.getpelican.com/en/stable/tips.html#publishing-to-github"&gt;GitHubに公開する方法&lt;/a&gt;を参考に以下のコマンドを実行する。
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre class="src src-sh"&gt;pelican content -o output -s pelicanconf.py
ghp-import output -b gh-pages
git push origin gh-pages
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-3-1" class="outline-3"&gt;
&lt;h3 id="sec-3-1"&gt;Makefile&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-1"&gt;
&lt;p&gt;
　Github Pageに簡単に公開できるようにするために、Makefileのターゲットを追加する。
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre class="src src-makefile"&gt;&lt;span style="font-weight: bold;"&gt;github&lt;/span&gt;: publish
        ghp-import $(&lt;span style="font-weight: bold; font-style: italic;"&gt;OUTPUTDIR&lt;/span&gt;)
        git push origin gh-pages
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="org-mode"></category><category term="pelican"></category><category term="blog"></category></entry></feed>